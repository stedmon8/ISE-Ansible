---
#
# Demonstrates the use of:
# - use of a credentials file
# - ansible.builtin.uri module from localhost
# - multiple tasks with conditional output
#
- name: Enable ISE REST APIs
  hosts: localhost
  vars_files:
    - secrets.yml
    - adgroups.yml
  gather_facts: no

  tasks:
  - name: Enable ISE OpenAPIs (ISE 3.1+)
    ansible.builtin.uri:
      url: "https://{{ ise_hostname }}/admin/API/apiService/update"
      method: POST
      url_username: "{{ ise_username }}"
      url_password: "{{ ise_password }}"
      force_basic_auth: yes
      body: '{ "papIsEnabled":true, "psnsIsEnabled":true }'
      status_code: 200,500
      body_format: json
      validate_certs: no
      return_content: true
    register: response


  - name: ISE OpenAPIs Enabled Status
    ansible.builtin.debug: 
      msg : "✅ ISE OpenAPIs Enabled"
    when: (response.status == 200) or (response.content.find('already enabled') != -1)


  - name: ISE OpenAPIs Disabled Status
    ansible.builtin.debug: 
      msg : "❌ ISE OpenAPIs Disabled"
    when: (response.status != 200) and (response.status != 500)


  - name: Enable ISE ERS APIs
    ansible.builtin.uri:
      url: "https://{{ ise_hostname }}/admin/API/NetworkAccessConfig/ERS"
      method: PUT
      url_username: "{{ ise_username }}"
      url_password: "{{ ise_password }}"
      force_basic_auth: yes
      headers:
        Accept: application/xml
        Content-Type: application/xml
      body: '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><ersConfig>
    <id>1</id><isCSRFCheck>false</isCSRFCheck><isPapEnabled>true</isPapEnabled><isPsnsEnabled>true</isPsnsEnabled></ersConfig>'
      status_code: 200
      validate_certs: no
      return_content: true
    register: response


  - name: ISE ERS Enabled Status
    ansible.builtin.debug: 
      msg : "✅ ISE ERS APIs Enabled"
    when: response.status == 200


  # - name: ISE ERS Disabled Status
  #   ansible.builtin.debug: 
  #     msg : "❌ ISE ERS APIs Disabled"
  #   when: response.status != 200

  # - name: Creat join point for AD
  #   ansible.builtin.uri:
  #     url: "https://10.1.17.245:9060/ers/config/activedirectory"
  #     method: POST
  #     url_username: "{{ ise_username }}"
  #     url_password: "{{ ise_password }}"
  #     force_basic_auth: yes
  #     headers:
  #       Accept: application/json
  #       Content-Type: application/json
  #     body: '{ "ERSActiveDirectory":  {"name" : "Company_users", "description" : "Group of Active company users", "domain" : "cisco.com"}}'
  #     status_code: 200, 201
  #     validate_certs: no
  #     return_content: true
  #   register: response
  #   ignore_errors:

  - name: Get All Join points
    ansible.builtin.uri:
      url: "https://10.1.17.245:9060/ers/config/activedirectory"
      method: GET
      url_username: "{{ ise_username }}"
      url_password: "{{ ise_password }}"
      force_basic_auth: yes
      headers:
        Accept: application/json
        Content-Type: application/json
      status_code: 200, 201
      validate_certs: no
      return_content: true
    register: response

  - name: Get All AD Groups
    ansible.builtin.uri:
        url: "https://10.1.17.245:9060/ers/config/activedirectory/{{ ise_id }}/getGroupsByDomain"
        method: PUT
        url_username: "{{ ise_username }}"
        url_password: "{{ ise_password }}"
        force_basic_auth: yes
        headers:
          Accept: application/json
          Content-Type: application/json
        body: '{ "OperationAdditionalData" : { "additionalData" : [ { "name" : "domain", "value" : "stbates.com"} ]}}'
        status_code: 200, 201
        validate_certs: no
        return_content: true
    register: response2
    ignore_errors: True

  # - name: Get all Network Access Conditions For Policy Set
  #   cisco.ise.network_access_conditions_for_policy_set_info:
  #     ise_hostname: "{{ise_hostname}}"
  #     ise_username: "{{ise_username}}"
  #     ise_password: "{{ise_password}}"
  #     ise_verify: "{{ise_verify}}"
  #   register: result


  - name: Login to get APP SESSION Cookie
    ansible.builtin.uri:
      url: "https://10.1.17.245/admin/LoginAction.do"
      method: POST
      headers:
        Accept: '*/*'
        Connection: keep-alive
        Content-Type: application/x-www-form-urlencoded
        Content-Length: 180
        Host: 10.1.17.245
        Origin: https://10.1.17.245
        Referer: https://10.1.17.245/admin/login.jsp
        Sec-Fetch-Dest: document
        Sec-Fetch-Mode: navigate
        Sec-Fetch-Site: same-origin
        Sec-Fetch-User: ?1
        Upgrade-Insecure-Requests: 1
      body: username=addmin&password=C%21sco12345&samlLogin=false&rememberme=on&name=admin&password=C%21sco12345&authType=Internal&newPassword=&destinationURL=&locale=en&hasSelectedLocale=false
      status_code: 200, 302
      validate_certs: no
    delegate_to: localhost
    register: response4

  # - name: Get cookie session
  #   debug:
  #     msg: "{{ response4.set_cookie[0:45] }}"

  - set_fact: cookie_session="{{ response4.set_cookie[0:45] }}"

  - name: Get Policy Set
    ansible.builtin.uri:
        url: "https://10.1.17.245/admin/rs/uiapi/policytable/radius"
        user: "admin"
        password: "C!sco12345"
        method: GET
        headers:
          Cookie: "{{ cookie_session }}"
          Accept: application/json
          Content-Type: application/json
        status_code: 200, 201
        validate_certs: no
        return_content: true
    register: response2

  - name: Get cookie session
    debug:
      msg: "{{ response2 }}"


   



  
 
...